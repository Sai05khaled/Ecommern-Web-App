{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\n// create the api\n\nexport const appApi = createApi({\n  reducerPath: \"appApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"http://localhost:8080\"\n  }),\n  endpoints: builder => ({\n    signup: builder.mutation({\n      query: user => ({\n        url: \"/users/signup\",\n        method: \"POST\",\n        body: user\n      })\n    }),\n    login: builder.mutation({\n      query: user => ({\n        url: \"/users/login\",\n        method: \"POST\",\n        body: user\n      })\n    }),\n    // creating product\n    createProduct: builder.mutation({\n      query: product => ({\n        url: \"/products\",\n        body: product,\n        method: \"POST\"\n      })\n    }),\n    deleteProduct: builder.mutation({\n      query: ({\n        product_id,\n        user_id\n      }) => ({\n        url: `/products/${product_id}`,\n        body: {\n          user_id\n        },\n        method: \"DELETE\"\n      })\n    }),\n    updateProduct: builder.mutation({\n      query: product => ({\n        url: `/products/${product.id}`,\n        body: product,\n        method: \"PATCH\"\n      })\n    }),\n    // add to cart\n    addToCart: builder.mutation({\n      query: cartInfo => ({\n        url: \"/products/add-to-cart\",\n        body: cartInfo,\n        method: \"POST\"\n      })\n    }),\n    // remove from cart\n    removeFromCart: builder.mutation({\n      query: body => ({\n        url: \"/products/remove-from-cart\",\n        body,\n        method: \"POST\"\n      })\n    }),\n    // increase cart\n    increaseCartProduct: builder.mutation({\n      query: body => ({\n        url: \"/products/increase-cart\",\n        body,\n        method: \"POST\"\n      })\n    }),\n    // decrease cart\n    decreaseCartProduct: builder.mutation({\n      query: body => ({\n        url: \"/products/decrease-cart\",\n        body,\n        method: \"POST\"\n      })\n    }),\n    // create order\n    createOrder: builder.mutation({\n      query: body => ({\n        url: \"/orders\",\n        method: \"POST\",\n        body\n      })\n    })\n  })\n});\nexport const {\n  useSignupMutation,\n  useLoginMutation,\n  useCreateProductMutation,\n  useAddToCartMutation,\n  useRemoveFromCartMutation,\n  useIncreaseCartProductMutation,\n  useDecreaseCartProductMutation,\n  useCreateOrderMutation,\n  useDeleteProductMutation,\n  useUpdateProductMutation\n} = appApi;\nexport default appApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","appApi","reducerPath","baseQuery","baseUrl","endpoints","builder","signup","mutation","query","user","url","method","body","login","createProduct","product","deleteProduct","product_id","user_id","updateProduct","id","addToCart","cartInfo","removeFromCart","increaseCartProduct","decreaseCartProduct","createOrder","useSignupMutation","useLoginMutation","useCreateProductMutation","useAddToCartMutation","useRemoveFromCartMutation","useIncreaseCartProductMutation","useDecreaseCartProductMutation","useCreateOrderMutation","useDeleteProductMutation","useUpdateProductMutation"],"sources":["/Users/khaledsaidani/Desktop/ecom_Proj/frn_e-com/ecom/src/services/appApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\n// create the api\n\nexport const appApi = createApi({\n  reducerPath: \"appApi\",\n  baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:8080\" }),\n  endpoints: (builder) => ({\n    \n    signup: builder.mutation({\n      query: (user) => ({\n        url: \"/users/signup\",\n        method: \"POST\",\n        body: user,\n      }),\n    }),\n\n    login: builder.mutation({\n      query: (user) => ({\n        url: \"/users/login\",\n        method: \"POST\",\n        body: user,\n      }),\n    }),\n    // creating product\n    createProduct: builder.mutation({\n      query: (product) => ({\n        url: \"/products\",\n        body: product,\n        method: \"POST\",\n      }),\n    }),\n\n    deleteProduct: builder.mutation({\n      query: ({ product_id, user_id }) => ({\n        url: `/products/${product_id}`,\n        body: {\n          user_id,\n        },\n        method: \"DELETE\",\n      }),\n    }),\n\n    updateProduct: builder.mutation({\n      query: (product) => ({\n        url: `/products/${product.id}`,\n        body: product,\n        method: \"PATCH\",\n      }),\n    }),\n\n    // add to cart\n    addToCart: builder.mutation({\n      query: (cartInfo) => ({\n        url: \"/products/add-to-cart\",\n        body: cartInfo,\n        method: \"POST\",\n      }),\n    }),\n    // remove from cart\n    removeFromCart: builder.mutation({\n      query: (body) => ({\n        url: \"/products/remove-from-cart\",\n        body,\n        method: \"POST\",\n      }),\n    }),\n\n    // increase cart\n    increaseCartProduct: builder.mutation({\n      query: (body) => ({\n        url: \"/products/increase-cart\",\n        body,\n        method: \"POST\",\n      }),\n    }),\n\n    // decrease cart\n    decreaseCartProduct: builder.mutation({\n      query: (body) => ({\n        url: \"/products/decrease-cart\",\n        body,\n        method: \"POST\",\n      }),\n    }),\n    // create order\n    createOrder: builder.mutation({\n      query: (body) => ({\n        url: \"/orders\",\n        method: \"POST\",\n        body,\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useSignupMutation,\n  useLoginMutation,\n  useCreateProductMutation,\n  useAddToCartMutation,\n  useRemoveFromCartMutation,\n  useIncreaseCartProductMutation,\n  useDecreaseCartProductMutation,\n  useCreateOrderMutation,\n  useDeleteProductMutation,\n  useUpdateProductMutation,\n} = appApi;\n\nexport default appApi;\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;;AAExE;;AAEA,OAAO,MAAMC,MAAM,GAAGF,SAAS,CAAC;EAC9BG,WAAW,EAAE,QAAQ;EACrBC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAAwB,CAAC,CAAC;EAC/DC,SAAS,EAAGC,OAAO,KAAM;IAEvBC,MAAM,EAAED,OAAO,CAACE,QAAQ,CAAC;MACvBC,KAAK,EAAGC,IAAI,KAAM;QAChBC,GAAG,EAAE,eAAe;QACpBC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACR,CAAC;IACH,CAAC,CAAC;IAEFI,KAAK,EAAER,OAAO,CAACE,QAAQ,CAAC;MACtBC,KAAK,EAAGC,IAAI,KAAM;QAChBC,GAAG,EAAE,cAAc;QACnBC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACR,CAAC;IACH,CAAC,CAAC;IACF;IACAK,aAAa,EAAET,OAAO,CAACE,QAAQ,CAAC;MAC9BC,KAAK,EAAGO,OAAO,KAAM;QACnBL,GAAG,EAAE,WAAW;QAChBE,IAAI,EAAEG,OAAO;QACbJ,MAAM,EAAE;MACV,CAAC;IACH,CAAC,CAAC;IAEFK,aAAa,EAAEX,OAAO,CAACE,QAAQ,CAAC;MAC9BC,KAAK,EAAEA,CAAC;QAAES,UAAU;QAAEC;MAAQ,CAAC,MAAM;QACnCR,GAAG,EAAE,aAAaO,UAAU,EAAE;QAC9BL,IAAI,EAAE;UACJM;QACF,CAAC;QACDP,MAAM,EAAE;MACV,CAAC;IACH,CAAC,CAAC;IAEFQ,aAAa,EAAEd,OAAO,CAACE,QAAQ,CAAC;MAC9BC,KAAK,EAAGO,OAAO,KAAM;QACnBL,GAAG,EAAE,aAAaK,OAAO,CAACK,EAAE,EAAE;QAC9BR,IAAI,EAAEG,OAAO;QACbJ,MAAM,EAAE;MACV,CAAC;IACH,CAAC,CAAC;IAEF;IACAU,SAAS,EAAEhB,OAAO,CAACE,QAAQ,CAAC;MAC1BC,KAAK,EAAGc,QAAQ,KAAM;QACpBZ,GAAG,EAAE,uBAAuB;QAC5BE,IAAI,EAAEU,QAAQ;QACdX,MAAM,EAAE;MACV,CAAC;IACH,CAAC,CAAC;IACF;IACAY,cAAc,EAAElB,OAAO,CAACE,QAAQ,CAAC;MAC/BC,KAAK,EAAGI,IAAI,KAAM;QAChBF,GAAG,EAAE,4BAA4B;QACjCE,IAAI;QACJD,MAAM,EAAE;MACV,CAAC;IACH,CAAC,CAAC;IAEF;IACAa,mBAAmB,EAAEnB,OAAO,CAACE,QAAQ,CAAC;MACpCC,KAAK,EAAGI,IAAI,KAAM;QAChBF,GAAG,EAAE,yBAAyB;QAC9BE,IAAI;QACJD,MAAM,EAAE;MACV,CAAC;IACH,CAAC,CAAC;IAEF;IACAc,mBAAmB,EAAEpB,OAAO,CAACE,QAAQ,CAAC;MACpCC,KAAK,EAAGI,IAAI,KAAM;QAChBF,GAAG,EAAE,yBAAyB;QAC9BE,IAAI;QACJD,MAAM,EAAE;MACV,CAAC;IACH,CAAC,CAAC;IACF;IACAe,WAAW,EAAErB,OAAO,CAACE,QAAQ,CAAC;MAC5BC,KAAK,EAAGI,IAAI,KAAM;QAChBF,GAAG,EAAE,SAAS;QACdC,MAAM,EAAE,MAAM;QACdC;MACF,CAAC;IACH,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EACXe,iBAAiB;EACjBC,gBAAgB;EAChBC,wBAAwB;EACxBC,oBAAoB;EACpBC,yBAAyB;EACzBC,8BAA8B;EAC9BC,8BAA8B;EAC9BC,sBAAsB;EACtBC,wBAAwB;EACxBC;AACF,CAAC,GAAGpC,MAAM;AAEV,eAAeA,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}