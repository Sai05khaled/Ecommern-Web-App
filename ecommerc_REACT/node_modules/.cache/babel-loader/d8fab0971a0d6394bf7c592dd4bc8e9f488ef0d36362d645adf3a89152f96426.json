{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport appApi from \"../services/appApi\";\nconst initialState = [];\nexport const productSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {\n    updateProducts: (_, action) => {\n      return action.payload; // Replace current state with new products\n    }\n  },\n  extraReducers: builder => {\n    // Handle fulfilled state for createProduct\n    builder.addMatcher(appApi.endpoints.createProduct.matchFulfilled, (_, {\n      payload\n    }) => payload);\n\n    // Handle fulfilled state for updateProducts (ensure this endpoint exists in appApi)\n    builder.addMatcher(appApi.endpoints.updateProduct.matchFulfilled,\n    // Corrected endpoint name to updateProduct\n    (_, {\n      payload\n    }) => payload);\n\n    // Handle fulfilled state for deleteProduct (removed the extra character)\n    builder.addMatcher(appApi.endpoints.deleteProduct.matchFulfilled, (_, {\n      payload\n    }) => payload);\n  }\n});\n\n// Export the action to update products manually\nexport const {\n  updateProducts\n} = productSlice.actions;\n// Export the reducer to be included in the store\nexport default productSlice.reducer;","map":{"version":3,"names":["createSlice","appApi","initialState","productSlice","name","reducers","updateProducts","_","action","payload","extraReducers","builder","addMatcher","endpoints","createProduct","matchFulfilled","updateProduct","deleteProduct","actions","reducer"],"sources":["/Users/khaledsaidani/Desktop/ecom_Proj/frn_e-com/ecom/src/features/productSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport appApi from \"../services/appApi\";\n\nconst initialState = [];\n\nexport const productSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {\n    updateProducts: (_, action) => {\n      return action.payload; // Replace current state with new products\n    },\n  },\n  extraReducers: (builder) => {\n    // Handle fulfilled state for createProduct\n    builder.addMatcher(\n      appApi.endpoints.createProduct.matchFulfilled,\n      (_, { payload }) => payload\n    );\n\n    // Handle fulfilled state for updateProducts (ensure this endpoint exists in appApi)\n    builder.addMatcher(\n      appApi.endpoints.updateProduct.matchFulfilled, // Corrected endpoint name to updateProduct\n      (_, { payload }) => payload\n    );\n\n    // Handle fulfilled state for deleteProduct (removed the extra character)\n    builder.addMatcher(\n      appApi.endpoints.deleteProduct.matchFulfilled,\n      (_, { payload }) => payload\n    );\n  },\n});\n\n// Export the action to update products manually\nexport const { updateProducts } = productSlice.actions;\n// Export the reducer to be included in the store\nexport default productSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,oBAAoB;AAEvC,MAAMC,YAAY,GAAG,EAAE;AAEvB,OAAO,MAAMC,YAAY,GAAGH,WAAW,CAAC;EACtCI,IAAI,EAAE,UAAU;EAChBF,YAAY;EACZG,QAAQ,EAAE;IACRC,cAAc,EAAEA,CAACC,CAAC,EAAEC,MAAM,KAAK;MAC7B,OAAOA,MAAM,CAACC,OAAO,CAAC,CAAC;IACzB;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1B;IACAA,OAAO,CAACC,UAAU,CAChBX,MAAM,CAACY,SAAS,CAACC,aAAa,CAACC,cAAc,EAC7C,CAACR,CAAC,EAAE;MAAEE;IAAQ,CAAC,KAAKA,OACtB,CAAC;;IAED;IACAE,OAAO,CAACC,UAAU,CAChBX,MAAM,CAACY,SAAS,CAACG,aAAa,CAACD,cAAc;IAAE;IAC/C,CAACR,CAAC,EAAE;MAAEE;IAAQ,CAAC,KAAKA,OACtB,CAAC;;IAED;IACAE,OAAO,CAACC,UAAU,CAChBX,MAAM,CAACY,SAAS,CAACI,aAAa,CAACF,cAAc,EAC7C,CAACR,CAAC,EAAE;MAAEE;IAAQ,CAAC,KAAKA,OACtB,CAAC;EACH;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEH;AAAe,CAAC,GAAGH,YAAY,CAACe,OAAO;AACtD;AACA,eAAef,YAAY,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}